Q. 가비지 컬렉션이란 무엇인가? 가비지 컬렉션을 구현하는 여러 방법에 대해 설명하고 각각의 장단점에 대해 논하라

가비지 컬렉션 : 프로그램에서 더 이상 쓰지 않는 메모리를 자동으로 찾아 가져가는 것
dangling pointer, memory leak 등의 문제를 방지할 수 있다.

방법
1) 레퍼런스 카운팅 : 한 객체를 참조하는 변수를 추적하는 방식
레퍼런스 카운트가 0이 되면 그 객체와 연관된 메모리가 비워진다.
장점 : 
- 간단하고 빠르다
단점 :
- 단순하게 구현할 경우 원형 레퍼런스를 제대로 처리하지 못할 수 있다 -> 약한 레퍼런스를 이용하여 외부 레퍼런스가 없어지면 할당 해제되도록 하여 이를 방지할 수 있다.

2) 추적형 가비지 컬렉터(Tracing Garbage Collector): 가비지 컬렉션 사이클 도중에 더 이상 참조되지 않는 메모리를 할당해제하기 전까지는 그대로 둔다.
방법 : Mark and Sweep(표시 후 삭제): 1) 프로그램의 각 스레드에서 액세스할 수 있는 모든 객체들을 표시, 2) 표시되지 않은 객체를 삭제
장점:
- 원형 참조 자료구조도 잘 처리할 수 있고, 레퍼런스 카운트를 증가하거나 감소시키기 위한 오버헤드도 필요 없다.
단점:
- 표시 후 삭제 방식에서는 가비지 컬렉션을 하는 도중에 실행 스레드가 잠시 중단되어야 한다.

3) 삼색 표시(tri-color marking)
최신 방식으로 가비지 컬렉션 도중에 실행 스레드가 멈추지 않아도 된다. but, 오버헤드가 아예 없어지는 것은 아니다.